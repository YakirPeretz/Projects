//
// Module my_project_lib.calc_beta_k.struct
//
// Created:
//          by - nofar.UNKNOWN (DESKTOP-6H8PMMN)
//          at - 13:40:50 20/11/2020
//
// Generated by Mentor Graphics' HDL Designer(TM) 2018.2 (Build 19)
//

`resetall
`timescale 1ns/10ps
module calc_beta_k( 
   // Port Declarations
   input   wire    [5:0]   beta_max, 
   input   wire    [5:0]   beta_min, 
   input   wire    [13:0]  sigma_k, 
   output  reg     [5:0]   BetakOut,
   input   wire    start_calc_beta,
   output reg  BetaReady
);


// Internal Declarations


// Local declarations

// Internal signal declarations
reg  [4:0]  dout;
reg  [4:0]  dout1;
reg  [8:0]  prod;
reg  [21:0] prod1;
reg  [1:0]  prod2;

//// Instances 
//divider1 U_9( 
//   .prod1 (prod1), 
//   .prod2 (prod2)
//); 

always @(start_calc_beta,beta_min,beta_max,prod2,sigma_k)

begin :ready_proc
  if (start_calc_beta)
  begin  
    if (!sigma_k) //sigma=0;
    begin
    BetakOut=beta_min;
    prod=0;
    prod1=0;
    dout=0;
    prod2=0;
    dout1 = 8;// 1-2^(-(mu_k-0.5)^2)
    end
    else //sigma!=0;
    begin
// ModuleWare code(v1.12) for instance 'U_0' of 'sub'
 dout = beta_max - beta_min;

// ModuleWare code(v1.12) for instance 'U_2' of 'constval'
 dout1 = 8;// 1-2^(-(mu_k-0.5)^2)

// ModuleWare code(v1.12) for instance 'U_1' of 'mult'
 prod = dout * dout1;

// ModuleWare code(v1.12) for instance 'U_3' of 'mult'
 prod1 = prod * sigma_k;

prod2 = prod1/1000000;
// ModuleWare code(v1.12) for instance 'U_4' of 'add'
 BetakOut = beta_min + prod2;
  end

 BetaReady=1;
 end
 else
 begin
   BetaReady=0;
   BetakOut=0;
   prod1=0;
   prod2=0;
   prod=0;
   dout=0;
   end
end


endmodule // calc_beta_k

